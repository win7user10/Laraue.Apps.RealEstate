// <auto-generated />
using System;
using System.Collections.Generic;
using Laraue.Apps.RealEstate.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Laraue.Apps.RealEstate.Db.Migrations
{
    [DbContext(typeof(AdvertisementsDbContext))]
    [Migration("20231130150838_MakeNotificationIntervalNullable")]
    partial class MakeNotificationIntervalNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.Advertisement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CrawledAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("crawled_at");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("integer")
                        .HasColumnName("floor_number");

                    b.Property<decimal>("Ideality")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("ideality");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<decimal?>("RenovationRating")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("renovation_rating");

                    b.Property<int>("RoomsCount")
                        .HasColumnType("integer")
                        .HasColumnName("rooms_count");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text")
                        .HasColumnName("short_description");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("source_id");

                    b.Property<int>("SourceType")
                        .HasColumnType("integer")
                        .HasColumnName("source_type");

                    b.Property<decimal>("Square")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("square");

                    b.Property<decimal>("SquareMeterPredictedPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("square_meter_predicted_price");

                    b.Property<decimal>("SquareMeterPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("square_meter_price");

                    b.Property<int>("TotalFloorsNumber")
                        .HasColumnType("integer")
                        .HasColumnName("total_floors_number");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("total_price");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_advertisements");

                    b.HasIndex("SourceId")
                        .HasDatabaseName("ix_advertisements_source_id");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("ix_advertisements_updated_at");

                    b.ToTable("advertisements", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.AdvertisementImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisementId")
                        .HasColumnType("bigint")
                        .HasColumnName("advertisement_id");

                    b.Property<bool?>("IsPictureRelevant")
                        .HasColumnType("boolean")
                        .HasColumnName("is_picture_relevant");

                    b.Property<bool?>("IsRenovationExists")
                        .HasColumnType("boolean")
                        .HasColumnName("is_renovation_exists");

                    b.Property<decimal?>("RenovationRating")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("renovation_rating");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_advertisement_images");

                    b.HasIndex("AdvertisementId")
                        .HasDatabaseName("ix_advertisement_images_advertisement_id");

                    b.HasIndex("Url")
                        .IsUnique()
                        .HasDatabaseName("ix_advertisement_images_url");

                    b.ToTable("advertisement_images", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.AdvertisementTransportStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisementId")
                        .HasColumnType("bigint")
                        .HasColumnName("advertisement_id");

                    b.Property<int>("DistanceInMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("distance_in_minutes");

                    b.Property<int>("DistanceType")
                        .HasColumnType("integer")
                        .HasColumnName("distance_type");

                    b.Property<long>("TransportStopId")
                        .HasColumnType("bigint")
                        .HasColumnName("transport_stop_id");

                    b.HasKey("Id")
                        .HasName("pk_advertisement_transport_stops");

                    b.HasIndex("AdvertisementId")
                        .HasDatabaseName("ix_advertisement_transport_stops_advertisement_id");

                    b.HasIndex("TransportStopId", "AdvertisementId")
                        .IsUnique()
                        .HasDatabaseName("ix_advertisement_transport_stops_transport_stop_id_advertiseme");

                    b.ToTable("advertisement_transport_stops", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.CrawlingSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FinishedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("finished_at");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("started_at");

                    b.HasKey("Id")
                        .HasName("pk_crawling_sessions");

                    b.ToTable("crawling_sessions", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.CrawlingSessionAdvertisement", b =>
                {
                    b.Property<long>("AdvertisementId")
                        .HasColumnType("bigint")
                        .HasColumnName("advertisement_id");

                    b.Property<long>("CrawlingSessionId")
                        .HasColumnType("bigint")
                        .HasColumnName("crawling_session_id");

                    b.HasKey("AdvertisementId", "CrawlingSessionId")
                        .HasName("pk_crawling_session_advertisements");

                    b.HasIndex("CrawlingSessionId")
                        .HasDatabaseName("ix_crawling_session_advertisements_crawling_session_id");

                    b.ToTable("crawling_session_advertisements", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.Selection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("ExcludeFirstFloor")
                        .HasColumnType("boolean")
                        .HasColumnName("exclude_first_floor");

                    b.Property<bool>("ExcludeLastFloor")
                        .HasColumnType("boolean")
                        .HasColumnName("exclude_last_floor");

                    b.Property<int>("Limit")
                        .HasColumnType("integer")
                        .HasColumnName("limit");

                    b.Property<string>("MaxDate")
                        .HasColumnType("text")
                        .HasColumnName("max_date");

                    b.Property<decimal?>("MaxPerSquareMeterPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("max_per_square_meter_price");

                    b.Property<decimal?>("MaxPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("max_price");

                    b.Property<decimal?>("MaxRenovationRating")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("max_renovation_rating");

                    b.Property<IList<long>>("MetroIds")
                        .HasColumnType("jsonb")
                        .HasColumnName("metro_ids");

                    b.Property<string>("MinDate")
                        .HasColumnType("text")
                        .HasColumnName("min_date");

                    b.Property<byte?>("MinMetroStationPriority")
                        .HasColumnType("smallint")
                        .HasColumnName("min_metro_station_priority");

                    b.Property<decimal?>("MinPerSquareMeterPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("min_per_square_meter_price");

                    b.Property<decimal?>("MinPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("min_price");

                    b.Property<decimal?>("MinRenovationRating")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("min_renovation_rating");

                    b.Property<decimal?>("MinSquare")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)")
                        .HasColumnName("min_square");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<TimeSpan?>("NotificationInterval")
                        .HasColumnType("interval")
                        .HasColumnName("notification_interval");

                    b.Property<IList<int>>("RoomsCount")
                        .HasColumnType("jsonb")
                        .HasColumnName("rooms_count");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sent_at");

                    b.Property<int>("SortBy")
                        .HasColumnType("integer")
                        .HasColumnName("sort_by");

                    b.Property<int>("SortOrderBy")
                        .HasColumnType("integer")
                        .HasColumnName("sort_order_by");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_selections");

                    b.HasIndex("SentAt")
                        .HasDatabaseName("ix_selections_sent_at");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_selections_user_id");

                    b.ToTable("selections", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.TransportStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<byte>("Priority")
                        .HasColumnType("smallint")
                        .HasColumnName("priority");

                    b.HasKey("Id")
                        .HasName("pk_transport_stops");

                    b.ToTable("transport_stops", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Color = "#cf0000",
                            Name = "Девяткино",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 2L,
                            Color = "#cf0000",
                            Name = "Гражданский проспект",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 3L,
                            Color = "#cf0000",
                            Name = "Академическая",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 4L,
                            Color = "#cf0000",
                            Name = "Политехническая",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 5L,
                            Color = "#cf0000",
                            Name = "Площадь Мужества",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 6L,
                            Color = "#cf0000",
                            Name = "Лесная",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 7L,
                            Color = "#cf0000",
                            Name = "Выборгская",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 8L,
                            Color = "#cf0000",
                            Name = "Площадь Ленина",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 9L,
                            Color = "#cf0000",
                            Name = "Чернышевская",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 10L,
                            Color = "#cf0000",
                            Name = "Площадь Восстания",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 11L,
                            Color = "#cf0000",
                            Name = "Владимирская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 12L,
                            Color = "#cf0000",
                            Name = "Пушкинская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 13L,
                            Color = "#03238b",
                            Name = "Технологический институт",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 14L,
                            Color = "#cf0000",
                            Name = "Балтийская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 15L,
                            Color = "#cf0000",
                            Name = "Нарвская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 16L,
                            Color = "#cf0000",
                            Name = "Кировский завод",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 17L,
                            Color = "#cf0000",
                            Name = "Автово",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 18L,
                            Color = "#cf0000",
                            Name = "Ленинский проспект",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 19L,
                            Color = "#cf0000",
                            Name = "Проспект Ветеранов",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 20L,
                            Color = "#03238b",
                            Name = "Парнас",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 21L,
                            Color = "#03238b",
                            Name = "Проспект Просвещения",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 22L,
                            Color = "#03238b",
                            Name = "Озерки",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 23L,
                            Color = "#03238b",
                            Name = "Удельная",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 24L,
                            Color = "#03238b",
                            Name = "Пионерская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 25L,
                            Color = "#03238b",
                            Name = "Черная речка",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 26L,
                            Color = "#03238b",
                            Name = "Петроградская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 27L,
                            Color = "#03238b",
                            Name = "Горьковская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 28L,
                            Color = "#03238b",
                            Name = "Невский проспект",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 29L,
                            Color = "#03238b",
                            Name = "Сенная площадь",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 30L,
                            Color = "#03238b",
                            Name = "Фрунзенская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 31L,
                            Color = "#03238b",
                            Name = "Московские Ворота",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 32L,
                            Color = "#03238b",
                            Name = "Электросила",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 33L,
                            Color = "#03238b",
                            Name = "Парк Победы",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 34L,
                            Color = "#03238b",
                            Name = "Московская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 35L,
                            Color = "#03238b",
                            Name = "Звездная",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 36L,
                            Color = "#03238b",
                            Name = "Купчино",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 37L,
                            Color = "#00701a",
                            Name = "Приморская",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 38L,
                            Color = "#00701a",
                            Name = "Василеостровская",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 39L,
                            Color = "#00701a",
                            Name = "Гостиный Двор",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 40L,
                            Color = "#00701a",
                            Name = "Маяковская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 41L,
                            Color = "#ff7f00",
                            Name = "Площадь Александра Невского",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 42L,
                            Color = "#00701a",
                            Name = "Елизаровская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 43L,
                            Color = "#00701a",
                            Name = "Ломоносовская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 44L,
                            Color = "#00701a",
                            Name = "Пролетарская",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 45L,
                            Color = "#00701a",
                            Name = "Обухово",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 46L,
                            Color = "#00701a",
                            Name = "Рыбацкое",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 47L,
                            Color = "#94007c",
                            Name = "Комендантский проспект",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 48L,
                            Color = "#94007c",
                            Name = "Старая Деревня",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 49L,
                            Color = "#94007c",
                            Name = "Крестовский остров",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 50L,
                            Color = "#94007c",
                            Name = "Чкаловская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 51L,
                            Color = "#94007c",
                            Name = "Спортивная",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 52L,
                            Color = "#94007c",
                            Name = "Садовая",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 53L,
                            Color = "#ff7f00",
                            Name = "Достоевская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 54L,
                            Color = "#ff7f00",
                            Name = "Лиговский проспект",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 55L,
                            Color = "#ff7f00",
                            Name = "Новочеркасская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 56L,
                            Color = "#ff7f00",
                            Name = "Ладожская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 57L,
                            Color = "#ff7f00",
                            Name = "Проспект Большевиков",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 58L,
                            Color = "#ff7f00",
                            Name = "Улица Дыбенко",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 59L,
                            Color = "#94007c",
                            Name = "Волковская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 60L,
                            Color = "#94007c",
                            Name = "Звенигородская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 61L,
                            Color = "#ff7f00",
                            Name = "Спасская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 62L,
                            Color = "#94007c",
                            Name = "Обводный канал",
                            Priority = (byte)2
                        },
                        new
                        {
                            Id = 63L,
                            Color = "#94007c",
                            Name = "Адмиралтейская",
                            Priority = (byte)1
                        },
                        new
                        {
                            Id = 64L,
                            Color = "#94007c",
                            Name = "Международная",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 65L,
                            Color = "#94007c",
                            Name = "Бухарестская",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 66L,
                            Color = "#00701a",
                            Name = "Беговая",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 67L,
                            Color = "#00701a",
                            Name = "Новокрестовская",
                            Priority = (byte)3
                        },
                        new
                        {
                            Id = 68L,
                            Color = "#94007c",
                            Name = "Проспект Славы",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 69L,
                            Color = "#94007c",
                            Name = "Дунайская",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 70L,
                            Color = "#94007c",
                            Name = "Шушары",
                            Priority = (byte)4
                        },
                        new
                        {
                            Id = 71L,
                            Color = "#ff7f00",
                            Name = "Горный институт",
                            Priority = (byte)4
                        });
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockout_end");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text")
                        .HasColumnName("normalized_email");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text")
                        .HasColumnName("normalized_user_name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text")
                        .HasColumnName("security_stamp");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("telegram_id");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Laraue.Core.Extensions.Hosting.EfCore.JobStateEntity", b =>
                {
                    b.Property<string>("JobName")
                        .HasColumnType("text")
                        .HasColumnName("job_name");

                    b.Property<string>("JobData")
                        .HasColumnType("text")
                        .HasColumnName("job_data");

                    b.Property<DateTime?>("LastExecutionAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_execution_at");

                    b.Property<DateTime?>("NextExecutionAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("next_execution_at");

                    b.HasKey("JobName")
                        .HasName("pk_job_states");

                    b.ToTable("job_states", (string)null);
                });

            modelBuilder.Entity("Laraue.Telegram.NET.Interceptors.EFCore.InterceptorStateModel<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("ActiveInterceptor")
                        .HasColumnType("text")
                        .HasColumnName("active_interceptor");

                    b.Property<string>("InterceptorContext")
                        .HasColumnType("text")
                        .HasColumnName("interceptor_context");

                    b.HasKey("UserId")
                        .HasName("pk_interceptor_state");

                    b.ToTable("interceptor_state", (string)null);
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.AdvertisementImage", b =>
                {
                    b.HasOne("Laraue.Apps.RealEstate.Db.Models.Advertisement", "Advertisement")
                        .WithMany("Images")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_advertisement_images_advertisements_advertisement_id");

                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.AdvertisementTransportStop", b =>
                {
                    b.HasOne("Laraue.Apps.RealEstate.Db.Models.Advertisement", "Advertisement")
                        .WithMany("TransportStops")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_advertisement_transport_stops_advertisements_advertisement_");

                    b.HasOne("Laraue.Apps.RealEstate.Db.Models.TransportStop", "TransportStop")
                        .WithMany()
                        .HasForeignKey("TransportStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_advertisement_transport_stops_transport_stops_transport_sto");

                    b.Navigation("Advertisement");

                    b.Navigation("TransportStop");
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.CrawlingSessionAdvertisement", b =>
                {
                    b.HasOne("Laraue.Apps.RealEstate.Db.Models.Advertisement", "Advertisement")
                        .WithMany()
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_crawling_session_advertisements_advertisements_advertisemen");

                    b.HasOne("Laraue.Apps.RealEstate.Db.Models.CrawlingSession", "CrawlingSession")
                        .WithMany("AffectedAdvertisements")
                        .HasForeignKey("CrawlingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_crawling_session_advertisements_crawling_sessions_crawling_");

                    b.Navigation("Advertisement");

                    b.Navigation("CrawlingSession");
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.Selection", b =>
                {
                    b.HasOne("Laraue.Apps.RealEstate.Db.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_selections_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.Advertisement", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("TransportStops");
                });

            modelBuilder.Entity("Laraue.Apps.RealEstate.Db.Models.CrawlingSession", b =>
                {
                    b.Navigation("AffectedAdvertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
